{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/kalash/Desktop/React%20Projects/fyntra/frontend/components/StockChart/Skeleton.tsx"],"sourcesContent":["export default function Skeleton() {\n    return (\n      <div className=\"animate-pulse h-[400px] w-full bg-gray-100 rounded-lg flex items-center justify-center\">\n        <div className=\"space-y-2 text-center\">\n          <div className=\"h-4 w-32 bg-gray-300 rounded mx-auto\"></div>\n          <p className=\"text-gray-400 text-sm\">Loading chart data...</p>\n        </div>\n      </div>\n    );\n  }"],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;;;;;;;AAI7C","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/kalash/Desktop/React%20Projects/fyntra/frontend/components/StockChart/StockChart.tsx"],"sourcesContent":["import { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  ChartOptions,\n} from \"chart.js\";\nimport Skeleton from \"./Skeleton\";\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement\n);\n\ninterface ChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    borderColor: string;\n    backgroundColor: string;\n    borderWidth?: number;\n    fill?: boolean;\n    tension?: number;\n  }[];\n}\n\ninterface StockChartProps {\n  data: ChartData | null;\n  error?: string | null;\n}\n\nconst StockChart: React.FC<StockChartProps> = ({ data, error }) => {\n  if (error) {\n    return (\n      <div className=\"bg-red-50 p-4 rounded-lg text-red-600\">\n        Chart Error: {error}\n      </div>\n    );\n  }\n\n  if (!data) {\n    return <Skeleton />;\n  }\n\n  const options: ChartOptions<\"line\"> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      title: {\n        display: true,\n        text: \"Stock Price Over Time\",\n        font: {\n          size: 16,\n          weight: \"bold\",\n        },\n        padding: { top: 10, bottom: 20 },\n      },\n      tooltip: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n          label: (context) => {\n            return `${context.dataset.label}: $${context.parsed.y.toFixed(2)}`;\n          },\n        },\n      },\n      legend: {\n        position: \"top\" as const,\n        labels: {\n          boxWidth: 12,\n          padding: 20,\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n        ticks: {\n          maxRotation: 0,\n          autoSkip: true,\n          maxTicksLimit: 10,\n        },\n      },\n      y: {\n        beginAtZero: false,\n        ticks: {\n          callback: (value) => `$${value}`,\n        },\n        grid: {\n          color: \"rgba(0, 0, 0, 0.05)\",\n        },\n      },\n    },\n    interaction: {\n      mode: \"nearest\",\n      axis: \"x\",\n      intersect: false,\n    },\n  };\n\n  return (\n    <div className=\"h-[400px] w-full\">\n      <Line data={data} options={options} redraw={true} />\n    </div>\n  );\n};\n\nexport default StockChart;\n"],"names":[],"mappings":";;;;AAAA;AACA;AAWA;;;;;AAEA,4JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,4JAAA,CAAA,QAAK,EACL,4JAAA,CAAA,UAAO,EACP,4JAAA,CAAA,SAAM,EACN,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,gBAAa,EACb,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,eAAY;AAqBd,MAAM,aAAwC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IAC5D,IAAI,OAAO;QACT,qBACE,8OAAC;YAAI,WAAU;;gBAAwC;gBACvC;;;;;;;IAGpB;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO,8OAAC,qIAAA,CAAA,UAAQ;;;;;IAClB;IAEA,MAAM,UAAgC;QACpC,YAAY;QACZ,qBAAqB;QACrB,SAAS;YACP,OAAO;gBACL,SAAS;gBACT,MAAM;gBACN,MAAM;oBACJ,MAAM;oBACN,QAAQ;gBACV;gBACA,SAAS;oBAAE,KAAK;oBAAI,QAAQ;gBAAG;YACjC;YACA,SAAS;gBACP,MAAM;gBACN,WAAW;gBACX,WAAW;oBACT,OAAO,CAAC;wBACN,OAAO,GAAG,QAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI;oBACpE;gBACF;YACF;YACA,QAAQ;gBACN,UAAU;gBACV,QAAQ;oBACN,UAAU;oBACV,SAAS;gBACX;YACF;QACF;QACA,QAAQ;YACN,GAAG;gBACD,MAAM;oBACJ,SAAS;gBACX;gBACA,OAAO;oBACL,aAAa;oBACb,UAAU;oBACV,eAAe;gBACjB;YACF;YACA,GAAG;gBACD,aAAa;gBACb,OAAO;oBACL,UAAU,CAAC,QAAU,CAAC,CAAC,EAAE,OAAO;gBAClC;gBACA,MAAM;oBACJ,OAAO;gBACT;YACF;QACF;QACA,aAAa;YACX,MAAM;YACN,MAAM;YACN,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,sJAAA,CAAA,OAAI;YAAC,MAAM;YAAM,SAAS;YAAS,QAAQ;;;;;;;;;;;AAGlD;uCAEe","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///Users/kalash/Desktop/React%20Projects/fyntra/frontend/app/dashboards/page.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport StockChart from \"@/components/StockChart/StockChart\";\nimport axios from \"axios\";\nimport { ChartData } from \"chart.js\";\n\nconst API_KEY = process.env.NEXT_PUBLIC_ALPHA_VANTAGE_API_KEY;\n\ninterface AlphaVantageResponse {\n  \"Time Series (Daily)\": {\n    [date: string]: {\n      \"4. close\": string;\n    };\n  };\n}\n\nconst Dashboard = () => {\n  const [stockData, setStockData] = useState<ChartData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchStockData = async () => {\n      try {\n        const response = await axios.get<AlphaVantageResponse>(\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=IBM&apikey=${API_KEY}`\n        );\n\n        const timeSeries = response.data[\"Time Series (Daily)\"];\n\n        // Type guard to ensure data exists\n        if (!timeSeries) {\n          throw new Error(\"Invalid API response format\");\n        }\n\n        // Explicit type conversion\n        const dates = Object.keys(timeSeries)\n          .slice(0, 30)\n          .reverse() as string[];\n        const prices = dates.map((date) =>\n          parseFloat(timeSeries[date][\"4. close\"])\n        );\n\n        const chartData: ChartData = {\n          labels: dates,\n          datasets: [\n            {\n              label: \"IBM Stock Price (USD)\",\n              data: prices,\n              borderColor: \"#0057FF\",\n              backgroundColor: \"rgba(0, 87, 255, 0.1)\",\n              borderWidth: 2,\n              fill: true,\n            },\n          ],\n        };\n        setStockData(chartData);\n      } catch (err) {\n        setError(\n          err instanceof Error ? err.message : \"Failed to fetch stock data\"\n        );\n        console.error(\"API Error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStockData();\n  }, []);\n\n  return (\n    <div className=\"px-6 py-12\">\n      <h2 className=\"text-3xl font-bold mb-8\">Stock Dashboard</h2>\n      {loading ? (\n        <p>Loading data...</p>\n      ) : error ? (\n        <p className=\"text-red-500\">{error}</p>\n      ) : stockData ? (\n        <StockChart data={stockData} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAGA,MAAM,UAAU,QAAQ,GAAG,CAAC,iCAAiC;AAU7D,MAAM,YAAY;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,IAAI;gBACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,CAAC,+EAA+E,EAAE,SAAS;gBAG7F,MAAM,aAAa,SAAS,IAAI,CAAC,sBAAsB;gBAEvD,mCAAmC;gBACnC,IAAI,CAAC,YAAY;oBACf,MAAM,IAAI,MAAM;gBAClB;gBAEA,2BAA2B;gBAC3B,MAAM,QAAQ,OAAO,IAAI,CAAC,YACvB,KAAK,CAAC,GAAG,IACT,OAAO;gBACV,MAAM,SAAS,MAAM,GAAG,CAAC,CAAC,OACxB,WAAW,UAAU,CAAC,KAAK,CAAC,WAAW;gBAGzC,MAAM,YAAuB;oBAC3B,QAAQ;oBACR,UAAU;wBACR;4BACE,OAAO;4BACP,MAAM;4BACN,aAAa;4BACb,iBAAiB;4BACjB,aAAa;4BACb,MAAM;wBACR;qBACD;gBACH;gBACA,aAAa;YACf,EAAE,OAAO,KAAK;gBACZ,SACE,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAEvC,QAAQ,KAAK,CAAC,cAAc;YAC9B,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;YACvC,wBACC,8OAAC;0BAAE;;;;;uBACD,sBACF,8OAAC;gBAAE,WAAU;0BAAgB;;;;;uBAC3B,0BACF,8OAAC,uIAAA,CAAA,UAAU;gBAAC,MAAM;;;;;uBAChB;;;;;;;AAGV;uCAEe","debugId":null}}]
}